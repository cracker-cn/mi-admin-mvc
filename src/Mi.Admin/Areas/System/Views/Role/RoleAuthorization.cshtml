@{
    Layout = "_ElementUiPlusLayout";
}

@section Styles{
    <style>
        body{
            background-color:#ffffff;
        }

        .btn-submit{
            position:absolute;
            right:20px;
            bottom:20px;
        }
    </style>
}

<el-input v-model="filterText" placeholder="请输入功能名称"></el-input>
<el-tree :data="treeData" show-checkbox :props="defaultProps" node-key="id" ref="treeRef"
         :default-checked-keys="defaultKeys" :check-strictly="true" class="my-1"
         :default-expanded-keys="defaultExpandedKeys"
         :filter-node-method="filterNode"></el-tree>
<el-button class="btn-submit" type="primary" @@click="submit">提交</el-button>

@section Scripts{
    <script>
        const App = {
            data() {
                return{
                    filterText:'',
                    treeData:[],
                    allKeys:[],
                    defaultProps:{
                        label: 'functionName',
                        children: 'children'
                    },
                    defaultKeys:[],
                    defaultExpandedKeys:[]
                }
            },
            watch:{
                filterText(val){
                    this.$refs['treeRef'].filter(val)
                }
            },
            methods:{
                filterNode(value,data){
                    if (!value) return true
                    return data.functionName.includes(value)
                },
                submit(){
                    ElementPlus.ElMessageBox.confirm(
                        '敏感操作，是否继续？',
                        '提示',
                        {
                            confirmButtonText: '确定',
                            cancelButtonText: '取消',
                            type: 'warning',
                        }
                    )
                        .then(() => {
                            let ids = this.$refs['treeRef'].getCheckedKeys()
                            axios.post('/System/Role/SetRoleFunctions', Qs.stringify({ funcIds: ids, id: '@ViewBag.Id' }))
                                .then(res => {
                                    if (res.data.code === 90001) {
                                        ElementPlus.ElMessage.success(res.data.message)
                                        setTimeout(()=>{
                                            parent.layer.close(parent.layer.getFrameIndex(window.name));
                                        },1000)
                                    } else {
                                        ElementPlus.ElMessage.error(res.data.message)
                                    }
                                })
                        }).catch(() => {
                            ElMessage({
                                type: 'info',
                                message: '取消操作',
                            })
                        })
                },
                fetchTreeData(){
                    axios.get('/System/Function/GetFunctionList')
                        .then(res => {
                            if (res.data.code == 90001) {
                                this.treeData = res.data.result
                                this.allKeys = this.treeData.map(x => x.id)
                            } else {
                                ElementPlus.ElMessage.error(res.data.message)
                            }
                        })
                },
                getDefaultKeys(){
                    axios.post('/System/Role/GetRoleFunctionIds?id=' + '@ViewBag.Id')
                        .then(res=>{
                            if (res.data.code == 90001) {
                                this.defaultKeys = res.data.result
                                this.defaultExpandedKeys = res.data.result
                            } else {
                                ElementPlus.ElMessage.error(res.data.message)
                            }
                        })
                }
            },
            created() {
                this.fetchTreeData()
                this.getDefaultKeys()
            }
        }
    </script>
}